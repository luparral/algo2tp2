\documentclass{article}
\usepackage[paper=a4paper, left=1.5cm, right=1.5cm, bottom=1.5cm, top=3.5cm]{geometry}
\usepackage{fancyhdr}
	
\pagestyle{fancy}
\thispagestyle{fancy}
\addtolength{\headheight}{1pt}
\lhead{Trabajo Pr\'{a}ctico 2}
\rhead{Grupo 16}
	
	
\begin{document}
\section*{M\'odulo SADAIC}

\subsection*{Interfaz}

\hspace{0.5cm} \textbf{se explica con:} \textsc{sadaic}

\hspace{0cm}\textbf{g\'eneros:} \texttt{sadaic}

\hspace{0cm}\textbf{usa:} Conjunto Lineal($\alpha$), Diccionario Rapido($\alpha$)

\subsection*{Operaciones b\'asicas de SADAIC}
\hspace{0.5cm} \textsc{Iniciar}(\textbf{in} $as$: conj(autor)) $\rightarrow res: sadaic$
	
\hspace{0cm} \textbf{Pre} $\equiv$ \{$\neg \emptyset(as)$\} 

\hspace{0cm} \textbf{Post} $\equiv$ \{$autores(res) = as \wedge temas(res) = \emptyset \wedge_{L} (\forall a:autor)(a \in autores(a)) \Rightarrow [temasDe(res,a) = \emptyset           \ \wedge$

\ $temasDisputadosPor(res,a) = \emptyset]$\}

\hspace{0cm} \textbf{Complejidad:} O($\#$(as) x maximo(as)) \hfill (maximo(as) = el tama√±o del nombre del autor con nombre mas largo)

\hspace{0cm} \textbf{Descripci\'on:} genera un SADAIC con los autores del par\'ametro sin temas.
\\

\hspace{0cm} \textsc{NuevoTema}(\textbf{in/out} $s$: sadaic, \textbf{in} $t$: tema, \textbf{in} $as$: conj(autor)) 

\hspace{0cm} \textbf{Pre} $\equiv$ \{ t $\notin$ temas(s) $\wedge$ $\neg$ $\emptyset$(as) $\wedge$ as $\subseteq$ autores(s) $\wedge$ s $=_{obs} s_{0}$\} 

\hspace{0cm} \textbf{Post} $\equiv$ \{s $=_{obs}$ nuevoTema($s_{0}$,t,as) $\wedge$ temas(s) $=_{obs}$ Ag(t,temas($s_{0}$)) $\wedge$ 

\hspace{0cm} ($\forall$ a:autor) a $\in$ as $\Rightarrow$ (temasDe(s,a) $=$ Ag(t,temasDe($s_{0}$,a)))\} 
 

\hspace{0cm} \textbf{Complejidad:} O(A x (long(l)+ T + $\#$(as)) + long(t))

\hspace{0cm} \textbf{Descripci\'on:} agrega el tema \textbf{t} al sadaic \textbf{s}.
\\

\hspace{0cm} \textsc{DisputarTema}(\textbf{in/out} $s$: sadaic, \textbf{in} $a$: autor, \textbf{in} $t$: tema)

\hspace{0cm} \textbf{Pre} $\equiv$ \{$t\in temas(s) \wedge a\in autores(s) \wedge t\notin temasDe(s,a) \cup temasDisputadosPor(s,a) \wedge s = s_{0}$\}

\hspace{0cm} \textbf{Post} $\equiv$ \{s $=_{obs}$ disputarTema($s_{0}$,a,t) $\wedge$ temasDisputadosPor(s,a) = Ag(t, temasDisputadosPor($s_{0}$,a))\}

\hspace{0cm} \textbf{Complejidad:}O((long(a) + A x (long(Autor) + T)))

\hspace{0cm} \textbf{Descripci\'on:} agrega el tema \textbf{t} a los temas disputados de \textbf{a} en el sadaic \textbf{s}.
\\

\hspace{0cm} \textsc{Temas}(\textbf{in} $s$: sadaic) $\rightarrow res : itConj(tema)$

\hspace{0cm} \textbf{Pre} $\equiv$ \{true\}

\hspace{0cm} \textbf{Post} $\equiv$ \{alias(esPermutacion?(secuSuby(res), temas(s)))\}

\hspace{0cm} \textbf{Complejidad:} O(1)

\hspace{0cm} \textbf{Descripci\'on:} devuelve un iterador a los temas del SADAIC.

\hspace{0cm} \textbf{Aliasing:} El res no es modificable, no apunta a una copia del conjunto. El iterador se invalida s\'i y solo s\'i se  

\hspace{0cm} elimina el elemento siguiente del iterador sin utilizar EliminarSiguiente.
\\

\hspace{0cm} \textsc{Autores}(\textbf{in} $s$: sadaic) $\rightarrow res : itConj(autor)$

\hspace{0cm} \textbf{Pre} $\equiv$ \{true\}

\hspace{0cm} \textbf{Post} $\equiv$ \{alias(esPermutacion?(secuSuby(res),autores(s)\}

\hspace{0cm} \textbf{Complejidad:} O(1)

\hspace{0cm} \textbf{Descripci\'on:} devuelve un iterador a un conjunto con los autores del SADAIC.

\hspace{0cm} \textbf{Aliasing:} El res no es modificable, no apunta a una copia del conjunto. El iterador se invalida s\'i y solo s\'i se 

\hspace{0cm} elimina el elemento siguiente del iterador sin utilizar EliminarSiguiente.
\\

\hspace{0cm} \textsc{temasDe}(\textbf{in} $s$: sadaic, \textbf{in} $a$: autor) $\rightarrow res : itConj(itConj(tema))$

\hspace{0cm} \textbf{Pre} $\equiv$ \{a $\in$ autores(s)\}

\hspace{0cm} \textbf{Post} $\equiv$ \{($\forall$ it: itConj(tema)) esta?(it, secuSuby(res)) $\Leftrightarrow$ ($\exists$ t:tema) t $\in$ temasDe(s,a) $\wedge_{L}$ alias(siguiente(it),t))\}

\hspace{0cm} \textbf{Complejidad:} O(long(a))

\hspace{0cm} \textbf{Descripci\'on:} devuelve los temas del autor \textbf{a} en el SADAIC \textbf{s}.

\hspace{0cm} \textbf{Aliasing:} El res no es modificable, no apunta a una copia del conjunto. El iterador se invalida s\'i y solo s\'i se

\hspace{0cm} elimina el elemento siguiente del iterador sin utilizar EliminarSiguiente.
\\

\pagebreak 

\hspace{0cm} \textsc{TemasDisputadosPor}(\textbf{in} $s$: sadaic, \textbf{in} $a$: autor) $\rightarrow res : itConj(itConj(tema))$

\hspace{0cm} \textbf{Pre} $\equiv$ \{a $\in$ autores(s)\}

\hspace{0cm} \textbf{Post} $\equiv$ \{($\forall$ it:itConj(tema)) esta?(it, secuSuby(res)) $\Leftrightarrow$ ($\exists$ t:tema) t $\in$ temasDisputadosPor(s,a) $\wedge_{L}$ alias(siguiente(it),t))\}

\hspace{0cm} \textbf{Complejidad:} O(long(a))

\hspace{0cm} \textbf{Descripci\'on:} devuelve los temas disputados por el autor \textbf{a} en el SADAIC \textbf{s}.

\hspace{0cm} \textbf{Aliasing:} El res no es modificable, no apunta a una copia del conjunto. El iterador se invalida s\'i y solo s\'i se

\hspace{0cm} elimina el elemento siguiente del iterador sin utilizar EliminarSiguiente.
\\

\hspace{0cm} \textsc{DameUnTemaDisputadoPor}(\textbf{in} $s$: sadaic, \textbf{in} $a$: autor) $\rightarrow$ $res:tema$

\hspace{0cm} \textbf{Pre} $\equiv$ \{a $\in$ autores(s)\}

\hspace{0cm} \textbf{Post} $\equiv$ \{res = dameUno(temasDisputadosPor(s,a))\}

\hspace{0cm} \textbf{Complejidad:} O(long(a)) $\wedge$ O(1) si la llamada anterior a esta funcion fue con el mismo parametro \textbf{a}

\hspace{0cm} \textbf{Descripci\'on:} devuelve un tema de los temas disputados por el autor \textbf{a}. Llamar a la funcion con el mismo

\hspace{0cm} parametro \textbf{a}, te va devolviendo todos los temas no disputados por el mismo. 

\hspace{0cm} \textbf{Aliasing:} El res no es modificable, se pasa por referencia.
\\

\hspace{0cm} \textsc{TemasNoDisputados}(\textbf{in} $s$: sadaic, \textbf{in} $a$: autor) $\rightarrow res : itConj(itConj(tema))$

\hspace{0cm} \textbf{Pre} $\equiv$ \{a $\in$ autores(s)\}

\hspace{0cm} \textbf{Post} $\equiv$ \{($\forall$ it:itConj(tema)) esta?(it, secuSuby(res)) $\Leftrightarrow$ ($\exists$ t:tema) t $\in$ temasNoDisputados(s,a) $\wedge_{L}$ alias(siguiente(it),t)\}

\hspace{0cm} \textbf{Complejidad:} O(long(a) + A $\times$ (\textit{l} + (T-D) $\times$ log(T-D))) (\textbf{\textit{l}} es la longitud del autor con el nombre mas largo)
	
\hspace{0cm} \textbf{Descripci\'on:} devuelve los temas que no le disputaron al autor \textbf{a} y los temas que no le disputaron a los coautores  

\hspace{0cm} de \textbf{a} en el SADAIC \textbf{s}.

\hspace{0cm} \textbf{Aliasing:} El res no apunta a una copia del conjunto. El iterador se invalida s\'i y solo s\'i se elimina el elemento 

\hspace{0cm} siguiente del iterador sin utilizar EliminarSiguiente.
\\

\hspace{0cm} \textsc{FTS}(\textbf{in} $s$: sadaic, \textbf{in} $st$: string) $\rightarrow res : itConj(itConj(tema))$

\hspace{0cm} \textbf{Pre} $\equiv$ \{true\}

\hspace{0cm} \textbf{Post} $\equiv$ \{($\forall$ it:itConj(tema)) esta?(it, secuSuby(res)) $\Leftrightarrow$ ($\exists$ t:tema) t $\in$ FTS(s,st) $\wedge_{L}$ alias(siguiente(it),t))\}

\hspace{0cm} \textbf{Complejidad:}O(long(s) + T $\times$ log(T) + A $\times$ log(A))

\hspace{0cm} \textbf{Descripci\'on:} devuelve los temas tales que el string \textbf{st} es prefijo del nombre del tema o prefijo de alguno de

\hspace{0cm} sus autores

\hspace{0cm} \textbf{Aliasing:} El res no apunta a una copia del conjunto. El iterador se invalida s\'i y solo s\'i se elimina el elemento 

\hspace{0cm} siguiente del iterador sin utilizar EliminarSiguiente.
\\

\hspace{0cm} \textsc{Coautores}(\textbf{in} $s$: sadaic, \textbf{in} $a$: autor) $\rightarrow res : itConj(autor)$

\hspace{0cm} \textbf{Pre} $\equiv$ \{a $\in$ autores(s)\}

\hspace{0cm} \textbf{Post} $\equiv$ \{alias(esPermutacion?(secuSuby(res),coautores(s,a)))\}

\hspace{0cm} \textbf{Complejidad:} O(1)

\hspace{0cm} \textbf{Descripci\'on:} devuelve todos los coautores de \textbf{a} en el sadaic \textbf{s}.

\hspace{0cm} \textbf{Aliasing:} El res no apunta a una copia del conjunto. El iterador se invalida s\'i y solo s\'i se elimina el elemento 

\hspace{0cm} siguiente del iterador sin utilizar EliminarSiguiente.
\\

\hspace{0cm} \textsc{id}(\textbf{in/out} $s$: sadaic, \textbf{in} $a$: autor) $\rightarrow res : nat$

\hspace{0cm} \textbf{Pre} $\equiv$ \{a $\in$ autores(s)\}

\hspace{0cm} \textbf{Post} $\equiv$ \{res = ord(a)\}

\hspace{0cm} \textbf{Complejidad:} O()

\hspace{0cm} \textbf{Descripci\'on:} devuelve el natural que representa al autor \textbf{a}.
\pagebreak

\subsection*{Representacion}

\hspace{0.5cm} TEMA es STRING

\hspace{0cm} AUTOR es STRING
\\

\hspace{0cm} \textbf{SADAIC} se representa con \textbf{estr}
\\

\hspace{0cm} donde \textbf{estr} =
\\

\hspace{0cm} \textless temas: conj(tema),

\hspace{0cm} \ \ autores: conj(autor),

\hspace{0cm} \ \ FTS: diccS(tema, conj(itConj(tema))),

\hspace{0cm} \ \ porAutor:diccS(autor, infoAutor),

\hspace{0cm} \ \ cacheoAutor\textgreater
\\

\hspace{0cm} donde \textbf{infoAutor} es \\

\hspace{0cm} \ \ $<$susTemas: conj(itConj(tema)), temasQDisputo: conj(itConj(tema)), susCoautores: conj(autor), 

\hspace{0cm} temasNoDisputados: conj(itConj(tema))$>$
\\

\hspace{0cm} donde \textbf{cacheoAutor} es \\

\hspace{0cm} \ \ $<$ultimoAutor: autor, itInicio: itConj(itConj(tema)), temasCacheo: itConj(itConj(tema))$>$

\subsection*{Algoritmos}

\hspace{0.5cm} \textsc{iIniciar}(\textbf{in} $as$: conj(autor)) $\rightarrow$ $res:estr$\\

	
\hspace{0.5cm} res.autores $\leftarrow$ copiar(as)\hfill \textsc{O}($\#$(as) x S)

\hspace{0.5cm} res.temas $\leftarrow$ Vac\'io() \hfill \textsc{O}(1)

\hspace{0.5cm} res.FTS $\leftarrow$ CrearDicc() \hfill \textsc{O}(1)

\hspace{0.5cm} res.porAutor $\leftarrow$ CrearDicc() \hfill \textsc{O}(1)

\hspace{0.5cm} (res.cacheoAutor).ultimoAutor $\leftarrow$ ``vac\'io'' \hfill \textsc{O}(1)

\hspace{0.5cm} (res.cacheoAutor).itInicio $\leftarrow$ CrearIt(Vacio())  \hfill \textsc{O}(1)

\hspace{0.5cm} (res.cacheAutor).temasCacheo $\leftarrow$ CrearIt(Vacio())  \hfill \textsc{O}(1)
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:} \textsc{O}($\#$(as) x S)}
\\

\hspace{0.5cm} donde \textbf{S} = el tama√±o del nombre del autor de as que tiene el nombre mas largo
\\
	
\hspace{0cm} \textsc{iNuevoTema}(\textbf{in/out} $e$: estr, \textbf{in} $t$: str, \textbf{in} $as$: conj(autor))\\
	
\hspace{0.5cm} itAutores: itConj(autor)

\hspace{0.5cm} itNuevoTema: itConj(tema)

\hspace{0.5cm} ConjAutor: Conj(autor)

\hspace{0.5cm} conj1: conj(itConj(tema))

\hspace{0.5cm} conj2: conj(itConj(tema))

\hspace{0.5cm} conj3: conj(itConj(autor))

\hspace{0.5cm} conj4: conj(itConj(tema))
	
\hspace{0.5cm} p: tupla(milagrosa)

\hspace{0.5cm} temas: conj(itConj(tema))
\\

\hspace{0.5cm} itNuevoTema $\leftarrow$ Agregar(e.temas, t)\hfill \textsc{O}($\#$(e.temas))

\hspace{0.5cm} itAutores $\leftarrow$ CrearIt(as) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while} haySiguiente?(itAutores) \hfill \textsc{O}($\#$(e.autores) $\times$ Complejidad del IF cuando la guarda da TRUE)

\hspace{1cm} \textbf{if} Definido?(e.PorAutor, siguiente(itAutores)) then  \hfill \textsc{O}(\textit{l})

\hspace{1.5cm} p $\leftarrow$ Significado(e.PorAutor,siguiente(it)) \hfill \textsc{O}(\textit{l})

\hspace{1.5cm} AgregarRapido(p.susTemas, itNuevoTema)\hfill \textsc{O}(1)

\hspace{1.5cm} AgregarRapido(p.temasNoDisputados, itNuevoTema) \hfill \textsc{O}(1)

\hspace{1.5cm} ConjAutor $\leftarrow$ copiar(as)\hfill \textsc{O}($\#$(as) $\times$ \textit{l})

\hspace{1.5cm} Eliminar(ConjAutor, siguiente(itAutores))\hfill \textsc{O}($\#$(ConjAutor) $\times$ \textit{l})

\hspace{1.5cm} unionPosta(p.susCoautores,ConjAutor) \hfill \textsc{O}($\#$(p.susCoautores) $\times$  log($\#$(p.susCoautores)) + 

\hfill $\#$(ConjAutor) $\times$ log($\#$(ConjAutor)))

\hspace{1cm} \textbf{else}

\hspace{1.5cm} conj1 $\leftarrow$ Vacio() \hfill \textsc{O}(1)

\hspace{1.5cm} conj2 $\leftarrow$ Vacio()\hfill \textsc{O}(1)

\hspace{1.5cm} conj3 $\leftarrow$ Vacio()\hfill \textsc{O}(1)

\hspace{1.5cm} conj4 $\leftarrow$ Vacio()\hfill \textsc{O}(1)

\hspace{1.5cm} AgregarRapido(conj1, itNuevoTema) \hfill \textsc{O}(1) 

\hspace{1.5cm} AgregarRapido(conj4, itNuevoTema)\hfill \textsc{O}(1) 

\hspace{1.5cm} ConjAutor $\leftarrow$ copiar(as) \hfill \textsc{O}($\#$(as))

\hspace{1.5cm} Eliminar(ConjAutor, siguiente(itAutores)) \hfill \textsc{O}($\#$(ConjAutor) $\times$ \textit{l})

\hspace{1.5cm} conj3 $\leftarrow$ ConjAutor \hfill \textsc{O}(1)

\hspace{1.5cm} p $\leftarrow$ $<$conj1,conj2,conj3,conj4$>$ \hfill \textsc{O}(1)

\hspace{1.5cm} Definir(e.PorAutor, siguiente(itAutores), p) \hfill \textsc{O}(\textit{l})

\hspace{1cm} \textbf{fi}

\hspace{1cm} avanzar(itAutores) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{endwhile}

\hspace{0.5cm} temas $\leftarrow$ Vacio() \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{if} pertenece(t, (e.autores)) \textbf{then}  \hfill \textsc{O}($\#$(e.autores))

\hspace{1cm} temas $\leftarrow$ copiar(significado(e.PorAutor,t).susTemas) \hfill \textsc{O}($\#$(significado(e.PorAutor,t).susTemas))

\hspace{1cm} Agregar(temas,itNuevoTema) \hfill \textsc{O}($\#$(temas))

\hspace{1cm} Definir(e.FTS, t, temas) \hfill \textsc{O}(long(t))

\hspace{0.5cm} \textbf{else}

\hspace{1cm} AgregarRapido(temas,itNuevoTema)  \hfill \textsc{O}(1)

\hspace{1cm} Definir(e.FTS, t, temas)\hfill \textsc{O}(long(t))

\hspace{0.5cm} \textbf{fi}
\\

\hspace{0cm} \textbf{\textsc{Complejidad:}} 
\\

\textbf{\textsc{O}($\#$(e.temas) + $\#$(e.autores) $\times$ (\textit{l} + \textit{l} + $\#$(as) $\times$ \textit{l} + $\#$(ConjAutor) $\times$ \textit{l} +}

\hspace{0cm}\textbf{$\#$(p.susCoautores) $\times$  log($\#$(p.susCoautores)) + $\#$(ConjAutor) $\times$ log($\#$(ConjAutor)))}

\hspace{0cm}\textbf{+ $\#$(e.autores) + $\#$(significado(e.PorAutor, t).susTemas) + $\#$(temas) + long(t))}
\\

\hspace{0cm} \textbf{\textsc{O}(T + A $\times$ (\textit{l} + $\#$(as) $\times$ \textit{l} + $\#$(as) $\times$ \textit{l} + A $\times$ log(A) + $\#$(as) $\times$ log($\#$(as))) + A + T + T + long(t))}
\\

\hspace{0cm} \textbf{\textsc{O}(T + A $\times$ ($\#$(as) $\times$ (\textit{l} + log($\#$(as)) + A $\times$ log(A)) + A + long(t))}
\\

\hspace{0cm} \textbf{\textsc{O}(T + A $\times$ ($\#$(as) $\times$ (\textit{l} + log($\#$(as)) + A $\times$ log(A)) + long(t))}
\\

\hspace{0cm} donde \textit{\textbf{l}} = la longitud del autor del conjunto as con nombre mas largo
\\

\hspace{0cm} \textsc{iDisputarTema}(\textbf{in/out} $e$: estr, \textbf{in} $a$: autor, \textbf{in} $t$: tema)\\

\hspace{0.5cm} p1: conj(itConj(tema))

\hspace{0.5cm} p2: conj(itConj(tema))

\hspace{0.5cm} it: itConj(temas)

\hspace{0.5cm} itA: itConj(autor)

\hspace{0.5cm} it $\leftarrow$ CrearIt(e.temas) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while}(siguiente(it) != t) \hfill \textsc{O}($\#$(e.temas))

\hspace{1cm} avanzar(it) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{endwhile}

\hspace{0.5cm} p1 $\leftarrow$ Significado(e.PorAutor, a).temasQDisputo \hfill \textsc{O}(long(a))

\hspace{0.5cm} AgregarRapido(p1, it) \hfill \textsc{O}(1)

\hspace{0.5cm} itA $\rightarrow$ CrearIt(e.autores) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while}(haySiguiente?(itA)) \hfill \textsc{O}($\#$(e.autores)) $\times$ (cuerpo))

\hspace{1cm} p2 $\leftarrow$ Significado(e.porAutor,Siguiente(itA)).temasNoDisputados \hfill \textsc{O}(long(Siguiente(itA)))

\hspace{1cm} Eliminar(p2, it) \hfill \textsc{O}($\#$(p2))

\hspace{0.5cm} \textbf{endwhile}
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:}}
\\

\hspace{0.5cm} \textbf{\textsc{O}($\#$(e.temas) + long(a) + $\#$(e.autores) $\times$ (long(Siguiente(itA)) + $\#$(p2))}
\\

\hspace{0.5cm} \textbf{\textsc{O}(T + long(a) + A x (\textit{l} + (T-D)))}
\\

\hspace{0.5cm} \textbf{\textsc{O}(long(a) + A x (\textit{l} + T-D))}
\\

\hspace{0.5cm} donde \textbf{\textit{l}} = el tama√±o del autor registrado con el nombre mas largo
\\

\hspace{0cm} \textsc{iTemas}(\textbf{in} $e$: estr) $\rightarrow$ $res:itConj(tema)$\\

\hspace{0.5cm} res $\leftarrow$ CrearIt(e.temas) \hfill \textsc{O(1)}
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad: O(1)}}
\\
	
\hspace{0cm} \textsc{iAutores}(\textbf{in} $e$: estr) $\rightarrow$ $res:itConj(autor)$\\

\hspace{0.5cm} res $\leftarrow$ CrearIt(e.autores) \hfill \textsc{O(1)}
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad: } \textsc{O}(1)}
\\

\hspace{0cm} \textsc{iTemasDe}(\textbf{in} $e$: estr, \textbf{in} $a$: autor) $\rightarrow$ $res: conj(itConj(tema))$\\

\hspace{0.5cm} \textbf{if} Definido?(e.PorAutor, a) \textbf{then} \hfill \textsc{O}(long(a))

\hspace{1cm} res $\leftarrow$ Significado(e.porAutor,a).susTemas \hfill \textsc{O}(long(a))

\hspace{0.5cm} \textbf{else}

\hspace{1cm} res $\leftarrow$ Vacio() \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{fi}
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:} \textsc{O}(long(a))}
\\

\hspace{0cm} \textsc{iTemasDisputadosPor}(\textbf{in} $e$: estr, \textbf{in} $a$: autor) $\rightarrow$ $res: conj(itConj(tema))$\\

\hspace{0.5cm} res $\leftarrow$ Significado(e.porAutor,a).temasQDisputo \hfill \textsc{O}(long(a))
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:} \textsc{O}(long(a))}
\\
	
\hspace{0cm} \textsc{iDameUnTemaDisputadoPor}(\textbf{in} $e$: estr, \textbf{in} $a$: autor) $\rightarrow$ $res:tema$\\

\hspace{0.5cm} it: itConj(itConj(tema))

\hspace{0.5cm} \textbf{if} (e.cacheoAutor).ultimoAutor $=$ a \textbf{then} \hfill \textsc{O}(1)

\hspace{1cm} res $\leftarrow$ Siguiente(Siguiente((e.cacheoAutor).temasCacheo)) \hfill \textsc{O}(1)

\hspace{1cm} it $\leftarrow$ (e.cacheoAutor).temasCacheo \hfill \textsc{O}(1)

\hspace{1cm} \textbf{if} haySiguiente?(it) \textbf{then} \hfill \textsc{O}(1)
		 
\hspace{1.5cm} avanzar(it) \hfill \textsc{O}(1)

\hspace{1cm} \textbf{else}

\hspace{1.5cm} it $\leftarrow$ copiar((e.cacheoAutor).itInicio) \hfill \textsc{O}(1)

\hspace{1cm} \textbf{fi}

\hspace{0.5cm} \textbf{else}

\hspace{1cm} it $\leftarrow$ CrearIt(Significado(e.porAutor,a).temasQdisputo) \hfill \textsc{O}(long(a))

\hspace{1cm} res $\leftarrow$ Siguiente(Siguiente(it)) \hfill \textsc{O}(1)

\hspace{1cm} (e.cacheoAutor).itInicio $\leftarrow$ copiar(it) \hfill \textsc{O}(1)

\hspace{1cm} \textbf{if} haySiguiente?(it) \textbf{then} \hfill \textsc{O}(1)
		
\hspace{1.5cm} avanzar(it) \hfill \textsc{O}(1)

\hspace{1cm} \textbf{else}

\hspace{1.5cm} it $\leftarrow$ copiar((e.cacheoAutor).itInicio) \hfill \textsc{O}(1)

\hspace{1cm} \textbf{fi}

\hspace{1cm} (e.cacheoAutor).autor $\leftarrow$ a \hfill \textsc{O}(1)

\hspace{1cm} (e.cacheoAutor).temasCacheo $\leftarrow$ it \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{fi}
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:} En el caso que se la invoca con el mismo par\'ametro que en la llamada anterior,}

\hspace{0.5cm} \textbf{la funci\'on es \textsc{O}(1), en caso contrario es \textsc{O}(long(a)).}
\\

\hspace{0cm} \textsc{iTemasNoDisputados}(\textbf{in} $e$: estr, \textbf{in} $a$: autor) $\rightarrow$ $res: conj(itConj(tema))$\\

\hspace{0.5cm} coAut: itConj(autor)

\hspace{0.5cm} p1: conj(itConj(tema))

\hspace{0.5cm} p2: conj(itConj(autor))

\hspace{0.5cm} p3: conj(itConj(tema))
\\

\hspace{0.5cm} p1 $\leftarrow$ Significado(e.porAutor,a).temasNoDisputados \hfill \textsc{O}(long(a))

\hspace{0.5cm} res $\leftarrow$ Copiar(p1) \hfill \textsc{O}($\#$(p1))

\hspace{0.5cm} p2 $\leftarrow$ Significado(e.porAutor,a).susCoautores \hfill \textsc{O}(long(a))

\hspace{0.5cm} coAut $\leftarrow$ CrearIt(p2) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while}(haySiguiente?(coAut)) \hfill \textsc{O}($\#$(p2) $\times$ (cuerpo))

\hspace{1cm} p3 $\leftarrow$ Significado(e.porAutor, Siguiente(coAut)).temasNoDisputados \hfill \textsc{O}(\textit{l})

\hspace{1cm} UnionPosta(res, p3) \hfill \textsc{O}($\#$(res) $\times$ log($\#$(res)) + $\#$(p3) $\times$ log($\#$(p3)))

\hspace{1cm} avanzar(coAut) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{endwhile}
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:}}
\\

\hspace{0.5cm} \textbf{\textsc{O}(long(a) + $\#$(p1) + long(a) + $\#$(p2) $\times$ (\textit{l} + $\#$(res) $\times$ log($\#$(res)}

\hspace{0.5cm}\textbf{+ $\#$(p3) $\times$ log($\#$(p3)))}
\\

\hspace{0.5cm} \textbf{\textsc{O}(long(a) + (T-D) + long(a) + A x (\textit{l} + (T-D) $\times$ log(T-D) + (T-D) $\times$ log(T-D))}
\\

\hspace{0.5cm} \textbf{\textsc{O}(long(a) + A $\times$ (\textit{l} + (T-D) $\times$ log(T-D)))}
\\

\hspace{0.5cm} donde \textbf{\textit{l}} es la longitud del nombre del autor que tiene el nombre mas largo.
\\

\hspace{0cm} \textsc{iFTS}(\textbf{in} $e$: estr,\textbf{in} $s$: string) $\rightarrow$ $res:conj(itConj(tema))$
\\

\hspace{0.5cm} \textbf{if} s[Longitud(s)-1] != $*$ \textbf{then} \hfill \textsc{O}(1)

\hspace{1cm} \textbf{if} Definido?(e.FTS,s) \textbf{then} \hfill \textsc{O}(long(s))

\hspace{1.5cm} res $\leftarrow$ Significado(e.FTS, s) \hfill \textsc{O}(long(s))

\hspace{1cm} \textbf{else}

\hspace{1.5cm} \textbf{if} Definido?(e.PorAutor,s) \textbf{then} \hfill \textsc{O}(long(s))

\hspace{2cm} res $\rightarrow$ significado(e.PorAutor,s) \hfill \textsc{O}(long(s))

\hspace{1.5cm} \textbf{else}

\hspace{2cm} res $\leftarrow$ Vac\'io() \hfill \textsc{O}(1)

\hspace{1.5cm} \textbf{fi}

\hspace{1cm} \textbf{fi}

\hspace{0.5cm} \textbf{else} 

\hspace{1cm} p1 $\leftarrow$ significadosHijos(e.FTS,s) \hfill \textsc{O}(long(s) + $\#$claves(e.FTS) $\times$ log($\#$claves(e.FTS)))

\hspace{1cm} p2 $\leftarrow$ significadosHijos(e.porAutor,s) \hfill \textsc{O}(long(s) + $\#$claves(e.porAutor) $\times$ log($\#$claves(e.porAutor)))

\hspace{1cm} unionesConj(p1) \hfill \textsc{O}(($\#$(p1) $\times$ $\#$(maximo(p1))) $\times$ log($\#$(p1) $\times$ $\#$(maximo(p1))))

\hspace{1cm} unionesConj(p2) \hfill \textsc{O}(($\#$(p2) $\times$ $\#$(maximo(p2))) $\times$ log($\#$(p2) $\times$ $\#$(maximo(p2))))

\hspace{1cm} res $\leftarrow$ unionPosta(p1,p2) \hfill \textsc{O}($\#$(p1) $\times$ log($\#$(p1)) + $\#$(p2) $\times$ log($\#$(p2)))

\hspace{0.5cm} \textbf{fi}
\\

\hspace{0.5cm}\textbf{\textsc{Complejidad:}}
\\

\hspace{0.5cm}\textbf{\textsc{O}(long(s) + $\#$claves(e.FTS) $\times$ log($\#$claves(e.FTS)) + long(s) + $\#$claves(e.porAutor)}

\hspace{0.5cm}\textbf{$\times$ log($\#$claves(e.porAutor)) + ($\#$(p1) $\times$ $\#$(maximo(p1))) $\times$ log($\#$(p1) $\times$ $\#$(maximo(p1))) +}

\hspace{0.5cm}\textbf{($\#$(p2) $\times$ $\#$(maximo(p2))) $\times$ log($\#$(p2) $\times$ $\#$(maximo(p2))) + $\#$(p1) $\times$}

\hspace{0.5cm}\textbf{log($\#$(p1)) + $\#$(p2) $\times$ log($\#$(p2))}
\\

\hspace{0.5cm}\textbf{\textsc{O}(long(s) + T $\times$ log(T) + long(s) + A $\times$ log(A) + T $\times$ log(T) + T $\times$ log(T) + T $\times$ log(T)}

\hspace{0.5cm}\textbf{+ T $\times$ log(T))}
\\

\hspace{0.5cm}\textbf{\textsc{O}(long(s) + T $\times$ log(T) + A $\times$ log(A))}
\\

\hspace{0cm} \textsc{iCoautores}(\textbf{in} $e$: estr, \textbf{in} $a$: autor) $\rightarrow$ $res:itConj(autor)$\\

\hspace{0.5cm} res $\leftarrow$ CrearIt(Significado(e.PorAutor,a).susCoautores) \hfill \textsc{O}(1)
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:} \textsc{O}(1)}
\\


\subsection*{Funciones Auxiliares}

{\Large \textbf{Interfaz}} 
\\

\hspace{0.5cm} \textsc{UnionNaif}(\textbf{in/out} $c1$: conj($\alpha$), \textbf{in} $c2$: conj($\alpha$)) 

\hspace{0.5cm} \textbf{Pre} $\equiv$ \{$true$\} 

\hspace{0.5cm} \textbf{Post} $\equiv$ \{($\forall$ a: $\alpha$) (a $\in$ c1 $\vee$ a$\in$ c2 $\Leftrightarrow$ a $\in$ res)\}

\hspace{0.5cm} \textbf{Complejidad:} \textsc{O}(tam(b) $\times$ tam(a)) 

\hspace{0.5cm} \textbf{Descripci\'on:} guarda en c1 todos los elementos del c1 y c2
\\

\hspace{0.5cm} \textsc{UnionPosta}(\textbf{in/out} $c1$: conj($\alpha$), \textbf{in} $c2$: conj($\alpha$)) 

\hspace{0.5cm} \textbf{Pre} $\equiv$ \{$\alpha$ tiene que tener relacion de orden\} 

\hspace{0.5cm} \textbf{Post} $\equiv$ \{($\forall$ a: $\alpha$) (a $\in$ c1 $\vee$ a$\in$ c2 $\Leftrightarrow$ a $\in$ res)\}

\hspace{0.5cm} \textbf{Complejidad:} \textsc{O}((tam(a) $\times$ log(tam(a)) $+$ tam(b) $\times$ log(tam(b))) 

\hspace{0.5cm} \textbf{Descripci\'on:} guarda en c1 todos los elementos del c1 y c2
\\

\hspace{0.5cm} \textsc{unionesConj}(\textbf{in/out} $c$: conj(conj($\alpha$))) $\rightarrow$ res:conj($\alpha$) 

\hspace{0.5cm} \textbf{Pre} $\equiv$ \{$true$\} 

\hspace{0.5cm} \textbf{Post} $\equiv$ \{($\forall$ a: $\alpha$) a $\in$ res $\Leftrightarrow$ ($\exists$ d:conj($\alpha$)) d $\in$ c $\wedge_{L}$ a $\in$ d\}

\hspace{0.5cm} \textbf{Complejidad:} \textsc{O}($\#$(c) $\times$ (($\#$(c) $\times$ \textit{l}) $\times$ log($\#$(c) $\times$ \textit{l}))  (\textbf{\textit{l}} es la longitud del conjunto mas grande de \textbf{c})

\hspace{0.5cm} \textbf{Descripci\'on:} guarda en \textbf{res} la union entre todos los conjuntos de \textbf{c}
\\

{\Large \textbf{Algoritmos}}
\\

\hspace{0.5cm} \textsc{iUnionNaif}($\textbf{in/out} a: conj(\alpha), \textbf{in} b:conj(\alpha)$)\\

\hspace{0.5cm} itB $\leftarrow$ crearIt(b) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while}(hayMas?(itb)) \hfill \textsc{O}(tam(b))

\hspace{1cm} \textbf{if} $\neg$ pertenece(a, actual(itB)) \textbf{then} \hfill \textsc{O}(tam(a))

\hspace{1.5cm} agregarRapido(a, actual(itB)) \hfill \textsc{O}(1)

\hspace{1cm} \textbf{endif} \hfill \textsc{O}(1)

\hspace{1cm} avanzar(itB) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{endwhile} \hfill \textsc{O}(1)
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:} \textsc{O}(tam(b) $\times$ tam(a))}
\\

\hspace{0cm} \textsc{iUnionPosta}($\textbf{in/out} a: conj(\alpha), \textbf{in} b:conj(\alpha)$)\\

\hspace{0.5cm} itA $\leftarrow$ crearIt(a) \hfill \textsc{O}(1)

\hspace{0.5cm} itB $\leftarrow$ crearIt(b) \hfill \textsc{O}(1)

\hspace{0.5cm} arregloA $\leftarrow$ Vac\'ia() \hfill \textsc{O}(1)

\hspace{0.5cm} arregloB $\leftarrow$ Vac\'ia() \hfill \textsc{O}(1)

\hspace{0.5cm} arregloRes $\leftarrow$ Vac\'ia() \hfill \textsc{O}(1)

\hspace{0.5cm} res $\leftarrow$ Vacio() \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while}(hayMas?(itA)) \hfill \textsc{O}(tam(a))

\hspace{1cm} agregarAtras(arregloA, actual(itA)) \hfill \textsc{O}(1)

\hspace{1cm} avanzar(itA) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{endwhile} \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while}(hayMas?(itB)) \hfill \textsc{O}(tam(b))

\hspace{1cm} agregarAtras(arregloB, actual(itB)) \hfill \textsc{O}(1)

\hspace{1cm} avanzar(itB) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{endwhile} \hfill \textsc{O}(1)

\hspace{0.5cm} MergeSort(arregloA) \hfill \textsc{O}(tam(a) $\times$ log(tam(a))))

\hspace{0.5cm} MergeSort(arregloB) \hfill \textsc{O}(tam(b) $\times$ log(tam(b))))

\hspace{0.5cm} Merge(arregloRes, arregloA, arregloB) \hfill \textsc{O}(tam(a) $+$ tam(b))

\hspace{0.5cm} agregarRapido(res, arregloRes[0]) \hfill \textsc{O}(1)

\hspace{0.5cm} i $\leftarrow$ 1 \hfill \textsc{O}(1)

\hspace{0.5cm} a $\leftarrow$ Vac\'io() \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while}(i $<$ tam(arregloRes) ) \hfill \textsc{O}(tam(a) $+$ tam(b))

\hspace{1cm} \textbf{if} arregloRes[i] ! = arregloRes[i - 1] \textbf{then} \hfill \textsc{O}(1)

\hspace{1.5cm} agregarRapido(a, arregloRes[i]) \hfill \textsc{O}(1)

\hspace{1cm} \textbf{endif} 

\hspace{0.5cm} \textbf{endwhile} \hfill \textsc{O}(1)
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:}}
\\

\hspace{0.5cm} \textbf{\textsc{O}(tam(a) $+$ tam(b) $+$ tam(a) $\times$ log(tam(a)) $+$ tam(b) $\times$ log(tam(b)) $+$ tam(a) $+$ tam(b))}
\\

\hspace{0.5cm} \textbf{\textsc{O}(tam(a) $\times$ (log(tam(a)) $+$ 2) $+$ tam(b) $\times$ (log(tam(b)) $+$ 2) \hspace{4.95cm}}
\\

\hspace{0.5cm} \textbf{\textsc{O}(tam(a) $\times$ log(tam(a)) $+$ tam(b) $\times$ log(tam(b))}
\\

\hspace{0cm} \textsc{iunionesConj}(\textbf{in/out} a: conj(conj($\alpha$))) $\rightarrow$ res:conj($\alpha$)
\\

\hspace{0.5cm} it $\leftarrow$ crearIt(a) \hfill \textsc{O}(1)

\hspace{0.5cm} res $\leftarrow$ Vacio() \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{while} haySiguiente?(it) \hfill \textsc{O}($\#$(a) $\times$ cuerpo)

\hspace{1cm} unionPosta(res, siguiente(it)) \hfill \textsc{O}($\#$(res) $\times$ log($\#$(res)) + \textit{l} $\times$ log(\textit{l}))

\hspace{1cm} avanzar(it) \hfill \textsc{O}(1)

\hspace{0.5cm} \textbf{endWhile}
\\

\hspace{0.5cm} \textbf{\textsc{Complejidad:}}
\\

\hspace{0.5cm}\textbf{\textsc{O}($\#$(a) $\times$ ($\#$(res) $\times$ log($\#$(res)) + \textit{l} $\times$ log(\textit{l}))}
\\

\hspace{0.5cm}\textbf{\textsc{O}($\#$(a) $\times$ (($\#$(a) $\times$ \textit{l}) $\times$ log($\#$(a) $\times$ \textit{l}) + \textit{l} $\times$ log(\textit{l}))}
\\

\hspace{0.5cm}\textbf{\textsc{O}($\#$(a) $\times$ (($\#$(a) $\times$ \textit{l}) $\times$ log($\#$(a) $\times$ \textit{l}))}
\\

\hspace{0.5cm} donde \textbf{\textit{l}} es el tama√±o del maximo conjunto que hay en \textbf{a}

\end{document}








